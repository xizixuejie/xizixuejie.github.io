<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>四风谷的雨</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2023-07-18T07:05:14.058Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>夕子学姐</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>dockerfile-maven-plugin多模块配置方式</title>
    <link href="http://example.com/posts/736c392f/"/>
    <id>http://example.com/posts/736c392f/</id>
    <published>2023-05-12T07:03:13.000Z</published>
    <updated>2023-07-18T07:05:14.058Z</updated>
    
    
    <summary type="html">&lt;p&gt;在maven多模块的项目使用dockerfile-maven-plugin插件时，如果只有一个模块需要打包docker镜像，在根目录下直接执行 maven dockerfile:build会提示其他模块没有dockerfile的解决办法。&lt;/p&gt;</summary>
    
    
    
    
    <category term="maven" scheme="http://example.com/tags/maven/"/>
    
    <category term="docker" scheme="http://example.com/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot的事件监听</title>
    <link href="http://example.com/posts/59d95f97/"/>
    <id>http://example.com/posts/59d95f97/</id>
    <published>2021-11-05T03:32:22.000Z</published>
    <updated>2021-11-05T03:35:14.075Z</updated>
    
    
    <summary type="html">&lt;p&gt;spring boot中事件的使用和发布&lt;/p&gt;</summary>
    
    
    
    
    <category term="springboot" scheme="http://example.com/tags/springboot/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot的容器功能</title>
    <link href="http://example.com/posts/d88cfa76/"/>
    <id>http://example.com/posts/d88cfa76/</id>
    <published>2021-05-16T03:13:55.000Z</published>
    <updated>2021-08-17T05:51:42.662Z</updated>
    
    
    <summary type="html">&lt;p&gt;SpringBoot 的组件添加、原生配置文件引入和配置绑定&lt;/p&gt;</summary>
    
    
    
    
    <category term="springboot" scheme="http://example.com/tags/springboot/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot特点</title>
    <link href="http://example.com/posts/f98c6656/"/>
    <id>http://example.com/posts/f98c6656/</id>
    <published>2021-05-15T07:06:51.000Z</published>
    <updated>2021-05-15T07:07:39.706Z</updated>
    
    
    <summary type="html">&lt;p&gt;SpringBoot 依赖管理 和 自动配置 的特性&lt;/p&gt;</summary>
    
    
    
    
    <category term="springboot" scheme="http://example.com/tags/springboot/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot入门</title>
    <link href="http://example.com/posts/3ce02997/"/>
    <id>http://example.com/posts/3ce02997/</id>
    <published>2021-05-15T05:55:51.000Z</published>
    <updated>2021-05-15T05:59:26.640Z</updated>
    
    
    <summary type="html">&lt;p&gt;Spring Boot 是由 Pivotal 团队提供的全新框架，其设计目的是用来简化新 Spring 应用的初始搭建以及开发过程。该框架使用了特定的方式来进行配置，从而使开发人员不再需要定义样板化的配置。&lt;/p&gt;</summary>
    
    
    
    
    <category term="springboot" scheme="http://example.com/tags/springboot/"/>
    
  </entry>
  
  <entry>
    <title>Redis的数据类型和基本操作方法</title>
    <link href="http://example.com/posts/c3319727/"/>
    <id>http://example.com/posts/c3319727/</id>
    <published>2021-05-10T11:59:17.000Z</published>
    <updated>2021-05-11T02:44:13.227Z</updated>
    
    
    <summary type="html">&lt;p&gt;redis存储的是：key-value格式的数据，其中key都是字符串，value有5种不同的数据结构&lt;/p&gt;</summary>
    
    
    
    
    <category term="redis" scheme="http://example.com/tags/redis/"/>
    
  </entry>
  
  <entry>
    <title>AJAX&amp;JSON</title>
    <link href="http://example.com/posts/a74be4d1/"/>
    <id>http://example.com/posts/a74be4d1/</id>
    <published>2021-04-11T08:25:25.000Z</published>
    <updated>2021-04-26T23:42:23.821Z</updated>
    
    
    <summary type="html">&lt;p&gt;AJAX的概念和实现方式、JSON的语法和转换&lt;/p&gt;</summary>
    
    
    
    
    <category term="ajax" scheme="http://example.com/tags/ajax/"/>
    
    <category term="json" scheme="http://example.com/tags/json/"/>
    
  </entry>
  
  <entry>
    <title>MyBatis学习笔记</title>
    <link href="http://example.com/posts/5177b49d/"/>
    <id>http://example.com/posts/5177b49d/</id>
    <published>2021-03-30T12:42:21.000Z</published>
    <updated>2021-04-27T01:52:32.638Z</updated>
    
    
    <summary type="html">&lt;p&gt;mybatis的环境搭建、单表增删改查、基于xml配置的动态sql语句、多表操作&lt;/p&gt;</summary>
    
    
    
    
    <category term="java" scheme="http://example.com/tags/java/"/>
    
    <category term="mybatis" scheme="http://example.com/tags/mybatis/"/>
    
  </entry>
  
  <entry>
    <title>SpringMVC中的拦截器</title>
    <link href="http://example.com/posts/fa194db2/"/>
    <id>http://example.com/posts/fa194db2/</id>
    <published>2021-03-06T07:54:40.000Z</published>
    <updated>2021-04-27T01:56:49.018Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;拦截器的作用&quot;&gt;&lt;a href=&quot;#拦截器的作用&quot; class=&quot;headerlink&quot; title=&quot;拦截器的作用&quot;&gt;&lt;/a&gt;拦截器的作用&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;SpringMVC的处理器拦截器类似于 Servlet 开发中的过滤器 Filter，用于对处理器进行预处理和后处理。&lt;/p&gt;
&lt;p&gt;用户可以自己定义一些拦截器来实现特定的功能。&lt;/p&gt;
&lt;p&gt;拦截器链（Interceptor Chain）：拦截器链就是将拦截器按一定的顺序联结成一条链。&lt;/p&gt;
&lt;p&gt;在访问被拦截的方法或字段时，拦截器链中的拦截器就会按其之前定义的顺序被调用。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    
    <category term="java" scheme="http://example.com/tags/java/"/>
    
    <category term="SpringMVC" scheme="http://example.com/tags/SpringMVC/"/>
    
  </entry>
  
  <entry>
    <title>SpringMVC的异常处理</title>
    <link href="http://example.com/posts/b57ff469/"/>
    <id>http://example.com/posts/b57ff469/</id>
    <published>2021-03-04T02:46:20.000Z</published>
    <updated>2021-04-27T01:53:49.940Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;异常处理的思路&quot;&gt;&lt;a href=&quot;#异常处理的思路&quot; class=&quot;headerlink&quot; title=&quot;异常处理的思路&quot;&gt;&lt;/a&gt;异常处理的思路&lt;/h2&gt;&lt;p&gt;Controller调用Service，Service调用Dao，异常都是向上抛出的，最终有DispatcherServlet找异常处理器进行处理。&lt;/p&gt;</summary>
    
    
    
    
    <category term="java" scheme="http://example.com/tags/java/"/>
    
    <category term="SpringMVC" scheme="http://example.com/tags/SpringMVC/"/>
    
  </entry>
  
  <entry>
    <title>SpringMVC文件上传</title>
    <link href="http://example.com/posts/649603b7/"/>
    <id>http://example.com/posts/649603b7/</id>
    <published>2021-03-02T12:18:20.000Z</published>
    <updated>2021-04-26T10:44:13.339Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;文件上传的必要前提&quot;&gt;&lt;a href=&quot;#文件上传的必要前提&quot; class=&quot;headerlink&quot; title=&quot;文件上传的必要前提&quot;&gt;&lt;/a&gt;文件上传的必要前提&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;form表单的 &lt;code&gt;enctype&lt;/code&gt; 属性（表单请求正文的类型）必须是 &lt;code&gt;multipart/form-data&lt;/code&gt;  （默认值是 &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt;）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;method&lt;/code&gt; 属性必须是是 &lt;code&gt;POST&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;提供一个文件选择区域 &lt;code&gt;&amp;lt;input type=&amp;quot;file&amp;quot;&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    
    <category term="java" scheme="http://example.com/tags/java/"/>
    
    <category term="SpringMVC" scheme="http://example.com/tags/SpringMVC/"/>
    
  </entry>
  
  <entry>
    <title>SpringMVC学习笔记（2）</title>
    <link href="http://example.com/posts/31a42df1/"/>
    <id>http://example.com/posts/31a42df1/</id>
    <published>2021-03-02T07:39:20.000Z</published>
    <updated>2021-04-26T10:44:13.339Z</updated>
    
    
    <summary type="html">&lt;p&gt;请求参数绑定、响应数据和结果类型&lt;/p&gt;</summary>
    
    
    
    
    <category term="java" scheme="http://example.com/tags/java/"/>
    
    <category term="SpringMVC" scheme="http://example.com/tags/SpringMVC/"/>
    
  </entry>
  
  <entry>
    <title>SpringMVC学习笔记（1）</title>
    <link href="http://example.com/posts/2311821f/"/>
    <id>http://example.com/posts/2311821f/</id>
    <published>2021-03-01T06:35:43.000Z</published>
    <updated>2021-04-27T01:56:12.505Z</updated>
    
    
    <summary type="html">&lt;p&gt;环境搭建和常用注解&lt;/p&gt;</summary>
    
    
    
    
    <category term="java" scheme="http://example.com/tags/java/"/>
    
    <category term="SpringMVC" scheme="http://example.com/tags/SpringMVC/"/>
    
  </entry>
  
  <entry>
    <title>spring中基于xml的声明式事务控制</title>
    <link href="http://example.com/posts/6d837220/"/>
    <id>http://example.com/posts/6d837220/</id>
    <published>2021-01-22T07:07:20.000Z</published>
    <updated>2021-08-20T00:40:50.629Z</updated>
    
    
    <summary type="html">&lt;p&gt;spring中基于xml的声明式事务控制配置步骤&lt;/p&gt;</summary>
    
    
    
    
    <category term="spring" scheme="http://example.com/tags/spring/"/>
    
  </entry>
  
  <entry>
    <title>JdbcTemplate的用法</title>
    <link href="http://example.com/posts/ae289768/"/>
    <id>http://example.com/posts/ae289768/</id>
    <published>2021-01-22T05:47:17.000Z</published>
    <updated>2021-08-20T00:40:58.894Z</updated>
    
    
    <summary type="html">&lt;p&gt;JdbcTemplate的用法&lt;/p&gt;</summary>
    
    
    
    
    <category term="spring" scheme="http://example.com/tags/spring/"/>
    
  </entry>
  
  <entry>
    <title>转账案例演示事务问题</title>
    <link href="http://example.com/posts/188ff67/"/>
    <id>http://example.com/posts/188ff67/</id>
    <published>2021-01-22T04:47:17.000Z</published>
    <updated>2021-08-19T09:05:46.108Z</updated>
    
    
    <summary type="html">&lt;p&gt;转账案例演示事务问题&lt;/p&gt;</summary>
    
    
    
    
    <category term="spring" scheme="http://example.com/tags/spring/"/>
    
  </entry>
  
  <entry>
    <title>spring中基于注解的aop配置</title>
    <link href="http://example.com/posts/f21e4f2a/"/>
    <id>http://example.com/posts/f21e4f2a/</id>
    <published>2021-01-21T12:47:17.000Z</published>
    <updated>2021-08-19T08:38:55.393Z</updated>
    
    
    <summary type="html">&lt;p&gt;注解aop&lt;/p&gt;</summary>
    
    
    
    
    <category term="spring" scheme="http://example.com/tags/spring/"/>
    
  </entry>
  
  <entry>
    <title>spring中基于xml的aop配置</title>
    <link href="http://example.com/posts/f21e4f2a/"/>
    <id>http://example.com/posts/f21e4f2a/</id>
    <published>2021-01-21T08:31:47.000Z</published>
    <updated>2021-08-17T05:48:55.901Z</updated>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;AOP （Aspect Orient Programming），直译过来就是 面向切面编程。AOP 是一种编程思想，是面向对象编程（OOP）的一种补充。面向对象编程将程序抽象成各个层次的对象，而面向切面编程是将程序抽象成各个切面。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    
    <category term="spring" scheme="http://example.com/tags/spring/"/>
    
  </entry>
  
  <entry>
    <title>spring中的注解ioc</title>
    <link href="http://example.com/posts/6a832505/"/>
    <id>http://example.com/posts/6a832505/</id>
    <published>2021-01-20T05:53:05.000Z</published>
    <updated>2021-08-17T05:55:04.109Z</updated>
    
    
    <summary type="html">&lt;p&gt;spring中注解ioc的简单用法&lt;/p&gt;</summary>
    
    
    
    
    <category term="spring" scheme="http://example.com/tags/spring/"/>
    
    <category term="java" scheme="http://example.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>spring中的依赖注入</title>
    <link href="http://example.com/posts/45b64bd9/"/>
    <id>http://example.com/posts/45b64bd9/</id>
    <published>2021-01-20T02:38:08.000Z</published>
    <updated>2021-04-27T01:58:06.030Z</updated>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;依赖注入：Dependency Injection&lt;/p&gt;
&lt;p&gt;IOC的作用：降低程序间的耦合（依赖关系）&lt;/p&gt;
&lt;p&gt;依赖关系的管理：以后都交给spring来维护&lt;/p&gt;
&lt;p&gt;在当前类中需要用到其他类的对象，由spring为我们提供，我我们只需要在配置文件中说明&lt;/p&gt;
&lt;p&gt;依赖关系的维护 就称之为依赖注入。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    
    <category term="spring" scheme="http://example.com/tags/spring/"/>
    
    <category term="java" scheme="http://example.com/tags/java/"/>
    
  </entry>
  
</feed>
